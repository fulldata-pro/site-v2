'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'
import { 
  ArrowLeft, ShoppingCart, CreditCard, Check, Info, Plus, Minus,
  Users, Building, Phone, Car, Landmark, Globe, Shield, Tag,
  Sparkles, TrendingUp, Gift
} from 'lucide-react'

interface ServiceCredit {
  id: string
  name: string
  icon: React.ElementType
  color: string
  bgColor: string
  price: number
  quantity: number
  description: string
  available?: number
}

export default function CreditsPurchasePage() {
  const router = useRouter()
  const [activeTab, setActiveTab] = useState<'argentina' | 'global' | 'chile'>('argentina')
  const [currency, setCurrency] = useState('ARS')
  const [hasDiscount, setHasDiscount] = useState(true)
  
  const [argentinaServices, setArgentinaServices] = useState<ServiceCredit[]>([
    {
      id: 'personas',
      name: 'Personas',
      icon: Users,
      color: 'text-blue-600',
      bgColor: 'bg-blue-50',
      price: 1389.66,
      quantity: 2,
      description: 'B√∫squeda completa de datos personales',
      available: 478
    },
    {
      id: 'empresas',
      name: 'Empresas',
      icon: Building,
      color: 'text-purple-600',
      bgColor: 'bg-purple-50',
      price: 2751.8,
      quantity: 1,
      description: 'Informaci√≥n corporativa y financiera',
      available: 498
    },
    {
      id: 'telefonos',
      name: 'Tel√©fonos',
      icon: Phone,
      color: 'text-green-600',
      bgColor: 'bg-green-50',
      price: 385.25,
      quantity: 0,
      description: 'Validaci√≥n y datos de l√≠neas telef√≥nicas',
      available: 500
    },
    {
      id: 'vehiculos',
      name: 'Veh√≠culos',
      icon: Car,
      color: 'text-orange-600',
      bgColor: 'bg-orange-50',
      price: 1100.72,
      quantity: 0,
      description: 'Historial y datos de automotores',
      available: 499
    },
    {
      id: 'cuentas',
      name: 'Cuentas Bancarias',
      icon: Landmark,
      color: 'text-indigo-600',
      bgColor: 'bg-indigo-50',
      price: 151.35,
      quantity: 0,
      description: 'Informaci√≥n de cuentas bancarias',
      available: 460
    }
  ])

  const [globalServices, setGlobalServices] = useState<ServiceCredit[]>([
    {
      id: 'rastreo',
      name: 'Rastreo Web',
      icon: Globe,
      color: 'text-red-600',
      bgColor: 'bg-red-50',
      price: 450.00,
      quantity: 0,
      description: 'B√∫squeda en internet y redes sociales'
    },
    {
      id: 'validacion',
      name: 'Validaci√≥n de Identidad',
      icon: Shield,
      color: 'text-cyan-600',
      bgColor: 'bg-cyan-50',
      price: 850.00,
      quantity: 0,
      description: 'Verificaci√≥n biom√©trica y documental'
    }
  ])

  const updateQuantity = (services: ServiceCredit[], setServices: Function, id: string, delta: number) => {
    setServices(services.map(service => 
      service.id === id 
        ? { ...service, quantity: Math.max(0, service.quantity + delta) }
        : service
    ))
  }

  const calculateSubtotal = () => {
    let total = 0
    if (activeTab === 'argentina') {
      total = argentinaServices.reduce((acc, service) => acc + (service.price * service.quantity), 0)
    } else if (activeTab === 'global') {
      total = globalServices.reduce((acc, service) => acc + (service.price * service.quantity), 0)
    }
    return total
  }

  const calculateDiscount = () => {
    if (!hasDiscount) return 0
    return calculateSubtotal() * 0.05 // 5% first purchase discount
  }

  const calculateTotal = () => {
    return calculateSubtotal() - calculateDiscount()
  }

  const getTotalCredits = () => {
    if (activeTab === 'argentina') {
      return argentinaServices.reduce((acc, service) => acc + service.quantity, 0)
    } else if (activeTab === 'global') {
      return globalServices.reduce((acc, service) => acc + service.quantity, 0)
    }
    return 0
  }

  const handlePurchase = () => {
    // Here would go the payment integration
    alert('Redirecting to payment gateway...')
  }

  const currencies = [
    { code: 'ARS', name: 'Pesos Argentinos', symbol: '$' },
    { code: 'USD', name: 'D√≥lares', symbol: 'U$S' },
    { code: 'EUR', name: 'Euros', symbol: '‚Ç¨' }
  ]

  const currentServices = activeTab === 'argentina' ? argentinaServices : activeTab === 'global' ? globalServices : []
  const setCurrentServices = activeTab === 'argentina' ? setArgentinaServices : activeTab === 'global' ? setGlobalServices : () => {}

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="mb-8">
          <button
            onClick={() => router.push('/dashboard')}
            className="inline-flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4 transition-colors"
          >
            <ArrowLeft className="w-4 h-4" />
            Volver al Dashboard
          </button>
          
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-3xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent">
                Compra de Cr√©ditos
              </h1>
              <p className="text-gray-600 mt-1">
                Selecciona los servicios que deseas adquirir para tu cuenta y personaliza la cantidad de cr√©ditos para cada uno.
              </p>
            </div>
            
            <div className="hidden lg:flex items-center gap-3">
              <div className="text-right">
                <p className="text-sm text-gray-500">Saldo actual</p>
                <p className="text-2xl font-bold text-gray-900">3,121</p>
              </div>
              <div className="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center text-white shadow-lg shadow-purple-500/25">
                <CreditCard className="w-6 h-6" />
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Services Selection */}
          <div className="lg:col-span-2 space-y-6">
            {/* Country Tabs */}
            <div className="bg-white rounded-2xl shadow-sm border border-gray-100 p-2">
              <div className="grid grid-cols-3 gap-2">
                <button
                  onClick={() => setActiveTab('argentina')}
                  className={`px-4 py-3 rounded-xl font-medium transition-all duration-200 flex items-center justify-center gap-2 ${
                    activeTab === 'argentina'
                      ? 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white shadow-lg shadow-blue-500/25'
                      : 'text-gray-600 hover:bg-gray-50'
                  }`}
                >
                  <span className="text-xl">üá¶üá∑</span>
                  Argentina
                </button>
                <button
                  onClick={() => setActiveTab('global')}
                  className={`px-4 py-3 rounded-xl font-medium transition-all duration-200 flex items-center justify-center gap-2 ${
                    activeTab === 'global'
                      ? 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white shadow-lg shadow-blue-500/25'
                      : 'text-gray-600 hover:bg-gray-50'
                  }`}
                >
                  <Globe className="w-5 h-5" />
                  Global
                </button>
                <button
                  onClick={() => setActiveTab('chile')}
                  className={`px-4 py-3 rounded-xl font-medium transition-all duration-200 flex items-center justify-center gap-2 ${
                    activeTab === 'chile'
                      ? 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white shadow-lg shadow-blue-500/25'
                      : 'text-gray-600 hover:bg-gray-50'
                  }`}
                >
                  <span className="text-xl">üá®üá±</span>
                  Chile
                </button>
              </div>
            </div>

            {/* Services List */}
            {activeTab !== 'chile' ? (
              <div className="space-y-4">
                {currentServices.map((service) => {
                  const Icon = service.icon
                  return (
                    <div
                      key={service.id}
                      className={`bg-white rounded-2xl shadow-sm border ${
                        service.quantity > 0 ? 'border-blue-200 bg-blue-50/30' : 'border-gray-100'
                      } p-6 transition-all duration-200`}
                    >
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-4">
                          <div className={`w-12 h-12 ${service.bgColor} rounded-xl flex items-center justify-center`}>
                            <Icon className={`w-6 h-6 ${service.color}`} />
                          </div>
                          <div>
                            <div className="flex items-center gap-2">
                              <h3 className="text-lg font-semibold text-gray-900">{service.name}</h3>
                              {service.available && (
                                <span className="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded-full">
                                  {service.available} disponibles
                                </span>
                              )}
                            </div>
                            <p className="text-sm text-gray-500">{service.description}</p>
                            <p className="text-sm font-semibold text-gray-900 mt-1">
                              ARS {service.price.toLocaleString('es-AR', { minimumFractionDigits: 2 })}
                            </p>
                          </div>
                        </div>
                        
                        <div className="flex items-center gap-3">
                          <button
                            onClick={() => updateQuantity(currentServices, setCurrentServices, service.id, -1)}
                            className="w-10 h-10 rounded-lg border border-gray-200 bg-white hover:bg-gray-50 flex items-center justify-center transition-colors"
                            disabled={service.quantity === 0}
                          >
                            <Minus className="w-4 h-4 text-gray-600" />
                          </button>
                          <div className="w-16 text-center">
                            <span className="text-xl font-semibold text-gray-900">{service.quantity}</span>
                          </div>
                          <button
                            onClick={() => updateQuantity(currentServices, setCurrentServices, service.id, 1)}
                            className="w-10 h-10 rounded-lg border border-gray-200 bg-white hover:bg-gray-50 flex items-center justify-center transition-colors"
                          >
                            <Plus className="w-4 h-4 text-gray-600" />
                          </button>
                        </div>
                      </div>
                    </div>
                  )
                })}
              </div>
            ) : (
              <div className="bg-white rounded-2xl shadow-sm border border-gray-100 p-12 text-center">
                <div className="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Info className="w-10 h-10 text-gray-400" />
                </div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">Pr√≥ximamente</h3>
                <p className="text-gray-500">Los servicios para Chile estar√°n disponibles pronto</p>
              </div>
            )}

            {/* Info Note */}
            {activeTab !== 'chile' && (
              <div className="bg-amber-50 border border-amber-200 rounded-xl p-4">
                <div className="flex gap-3">
                  <Info className="w-5 h-5 text-amber-600 flex-shrink-0 mt-0.5" />
                  <div className="text-sm text-amber-800">
                    <p className="font-medium mb-1">Nota importante</p>
                    <p>(*) Las compras que se realicen en fullData pueden demorar algunos minutos en impactar. 
                    Estos valores son estimados con el tipo de Cambio del d√≠a, esto puede variar al finalizar el proceso.</p>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* Purchase Summary */}
          <div className="lg:col-span-1">
            <div className="bg-white rounded-2xl shadow-sm border border-gray-100 sticky top-8">
              <div className="bg-gradient-to-r from-gray-800 to-gray-900 text-white p-6 rounded-t-2xl">
                <div className="flex items-center gap-2 mb-4">
                  <ShoppingCart className="w-5 h-5" />
                  <h3 className="text-lg font-semibold">Resumen de Compra</h3>
                </div>
                
                {/* Currency Selector */}
                <div className="mb-4">
                  <label className="text-white/80 text-sm mb-2 block">Moneda</label>
                  <select
                    value={currency}
                    onChange={(e) => setCurrency(e.target.value)}
                    className="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white backdrop-blur"
                  >
                    {currencies.map(curr => (
                      <option key={curr.code} value={curr.code} className="text-gray-900">
                        ({curr.code}) {curr.name}
                      </option>
                    ))}
                  </select>
                </div>

                {/* Selected Services Summary */}
                {activeTab === 'argentina' && (
                  <div className="space-y-3">
                    <div className="flex items-center gap-2 text-sm">
                      <span className="text-xl">üá¶üá∑</span>
                      <span className="font-medium">Argentina</span>
                    </div>
                    {argentinaServices.filter(s => s.quantity > 0).map(service => {
                      const Icon = service.icon
                      return (
                        <div key={service.id} className="flex items-center justify-between text-sm">
                          <div className="flex items-center gap-2">
                            <Icon className="w-4 h-4 text-white/80" />
                            <span className="text-white/90">{service.name} x{service.quantity}</span>
                          </div>
                          <span className="font-medium">
                            ARS {(service.price * service.quantity).toLocaleString('es-AR', { minimumFractionDigits: 2 })}
                          </span>
                        </div>
                      )
                    })}
                  </div>
                )}
              </div>
              
              <div className="p-6 space-y-4">
                {/* Totals */}
                <div className="space-y-3 pb-4 border-b border-gray-100">
                  <div className="flex justify-between text-gray-600">
                    <span>Subtotal</span>
                    <span className="font-semibold text-gray-900">
                      ARS {calculateSubtotal().toLocaleString('es-AR', { minimumFractionDigits: 2 })}
                    </span>
                  </div>
                  
                  {hasDiscount && (
                    <div className="flex justify-between items-center">
                      <div className="flex items-center gap-2">
                        <span className="text-green-600">Descuento</span>
                        <span className="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full font-medium">
                          Primera compra -5%
                        </span>
                      </div>
                      <span className="font-semibold text-green-600">
                        -ARS {calculateDiscount().toLocaleString('es-AR', { minimumFractionDigits: 2 })}
                      </span>
                    </div>
                  )}
                  
                  <button
                    className="w-full text-sm text-blue-600 hover:text-blue-700 font-medium flex items-center justify-center gap-2 py-2 hover:bg-blue-50 rounded-lg transition-colors"
                  >
                    <Gift className="w-4 h-4" />
                    Agregar Beneficio
                  </button>
                </div>
                
                <div className="flex justify-between items-center">
                  <span className="text-lg font-semibold text-gray-900">Total</span>
                  <span className="text-2xl font-bold text-gray-900">
                    ARS {calculateTotal().toLocaleString('es-AR', { minimumFractionDigits: 2 })}
                  </span>
                </div>

                {/* Credits Summary */}
                <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl p-4">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <Sparkles className="w-5 h-5 text-purple-600" />
                      <span className="text-sm text-purple-700 font-medium">Total de cr√©ditos</span>
                    </div>
                    <span className="text-xl font-bold text-purple-900">{getTotalCredits()}</span>
                  </div>
                </div>
                
                {/* Purchase Button */}
                <button
                  onClick={handlePurchase}
                  disabled={getTotalCredits() === 0}
                  className="w-full px-6 py-4 bg-gradient-to-r from-blue-500 to-cyan-500 text-white rounded-xl font-semibold hover:from-blue-600 hover:to-cyan-600 transition-all duration-200 shadow-lg shadow-blue-500/25 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2"
                >
                  <CreditCard className="w-5 h-5" />
                  Pagar con Mercado Pago
                </button>
                
                {/* Security Note */}
                <div className="flex items-center gap-2 text-xs text-gray-500 justify-center">
                  <Shield className="w-4 h-4" />
                  <span>Pago 100% seguro y procesado al instante</span>
                </div>
                
                {/* Mercado Pago Logo */}
                <div className="flex justify-center pt-2">
                  <div className="bg-gray-100 rounded-lg px-4 py-2">
                    <span className="text-sm font-semibold text-gray-700">mercado pago</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}